; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[common]
build_unflags =
    -std=c++11
    -std=gnu++11
build_flags =
    -I "src/"
    -I "src/3rd_party/ros-ws/ros_lib"
    ; -I "3rd_party/rosserial/rosserial_arduino/src/ros_lib"
    ; -I "3rd_party/rosserial/rosserial_client/src/ros_lib"
    ; -I "micro_ros/micro_ros_arduino-2.0.5-galactic/micro_ros_arduino-2.0.5-galactic/src"
    ; -I "src/micro_ros/micro_ros_arduino-2.0.5-galactic/micro_ros_arduino-2.0.5-galactic/src"
    -D PSU_BENCHTOP_PROGRAMMER=true
    -std=c++17
    -std=gnu++17
    -O0 -ggdb3 -g3 -Wall -Wreturn-local-addr
debug_build_flags =
    -O0 -ggdb3 -g3
lib_deps = 
    Wire
    SPI
    https://github.com/adafruit/Adafruit-GFX-Library.git#1.11.3
    https://github.com/adafruit/Adafruit_BusIO.git#1.14.1
    https://github.com/Reinbert/ros_diffdrive_robot.git
    ; https://github.com/ZinggJM/GxEPD.git    ; Useful for the examples
    ; https://github.com/olikraus/U8g2_for_Adafruit_GFX.git   ; Useful for the examples
    git@github.com:gianni-carbone/STM32encoder.git  ;https://github.com/gianni-carbone/STM32encoder
    ; https://github.com/micro-ROS/micro_ros_arduino.git#d72671a  ;v2.0.5-galactic
    ; https://github.com/micro-ROS/micro_ros_platformio
    ; https://github.com/PaulStoffregen/Encoder.git
    https://github.com/adafruit/Adafruit_BNO055.git
    https://github.com/adafruit/Adafruit_Sensor.git
    ; https://github.com/MaxChanger/IMU_TO_ROS.git    ; Example for IMU data -> ROS
; board_microros_distro = galactic
extra_scripts =
;   pre:extra_scripts/copy_src_files_from_manta.py
;   pre:extra_scripts/apply_patches.py
  pre:extra_scripts/get_commit_sha.py

[env:nucleo_f446re]
platform = ststm32
board = nucleo_f446re_custom
framework = arduino
; debug_tool = stlink
; upload_protocol = stlink
debug_tool = jlink
upload_protocol = jlink
debug_build_flags =
    ${common.debug_build_flags}
lib_deps = 
    ${common.lib_deps}
    ; https://github.com/maxgerhardt/pio-custom-stm32duino-variants.git Useful reference.
build_flags =
    ${common.build_flags}
    -D NUCLEO_F446RE_CUSTOM=true
    -D LOGGING=true
    ; -D USBCON
    ; -D USBD_USE_CDC
build_unflags =
    ${common.build_unflags}
    -Os
extra_scripts =
    ${common.extra_scripts}
debug_init_break = break main.cpp:58
board_build.variant = nucleo_f446re_custom

[env:nucleo_l432kc]
platform = ststm32
board = nucleo_l432kc_custom
framework = arduino
debug_tool = stlink
upload_protocol = stlink
debug_build_flags =
    ${common.debug_build_flags}
lib_deps = 
    ${common.lib_deps}
    ; https://github.com/maxgerhardt/pio-custom-stm32duino-variants.git Useful reference.
build_flags =
    ${common.build_flags}
    -D NUCLEO_L432KC=true
build_unflags =
    ${common.build_unflags}
    -Os
extra_scripts =
    ${common.extra_scripts}
debug_init_break = break main.cpp:58
board_build.variant = nucleo_l432kc_custom

[env:nucleo_f767zi]
platform = ststm32
board = nucleo_f767zi_custom
framework = arduino
debug_tool = stlink
upload_protocol = stlink
debug_build_flags =
    ${common.debug_build_flags}
lib_deps = 
    ${common.lib_deps}
    ; https://github.com/maxgerhardt/pio-custom-stm32duino-variants.git Useful reference.
build_flags =
    ${common.build_flags}
    -D NUCLEO_F767ZI_CUSTOM=true
    -D LOGGING=true
    ; -D USBCON
    ; -D USBD_USE_CDC
    ; -D __STM32F7__
build_unflags =
    ${common.build_unflags}
    -Os
extra_scripts =
    ${common.extra_scripts}
debug_init_break = break main.cpp:58
board_build.variant = nucleo_f767zi_custom